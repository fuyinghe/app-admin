<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd" >

	<security:http auto-config="true" use-expressions="true" >
		
	    <security:form-login authentication-success-handler-ref="loginSuccessHandler" 
	    		login-page="/login.jsp" login-processing-url="/j_spring_security_check"  authentication-failure-url="/login.jsp?returnCode=passwordError" />
	    		
		<security:logout  invalidate-session="true" logout-url="/j_spring_security_logout" logout-success-url="/login.jsp"/> 
<!-- 		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />  -->
		<custom-filter after="FILTER_SECURITY_INTERCEPTOR" ref ="urlFilter" />
		<headers>
	            <frame-options disabled="true" />     
		</headers>
		<security:session-management session-authentication-error-url="/login.jsp?returnCode=passwordError">  
		  	<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>  
		</security:session-management>  
		
		<security:csrf disabled="true" />
		
	</security:http>
	
    <beans:bean id="urlFilter"  class="com.hrbwmxx.framework.security.filter.URLFilter"></beans:bean>
    
    <beans:bean id="loginSuccessHandler"  class="com.hrbwmxx.framework.security.handler.AdvancedLoginSuccessHandler">
    	<beans:property name="alwaysUseDefaultTargetUrl" value="true"></beans:property>
    	<beans:property name="defaultTargetUrl" value="/index2.html"></beans:property>
    </beans:bean>
    <beans:bean id="logoutSuccessHandler" class="com.hrbwmxx.framework.security.handler.AdvancedLogoutSuccessHandler">
    	<beans:property name="defaultTargetUrl" value="/competition.do?method=queryCompetition.security"></beans:property>
    </beans:bean>
	
	<beans:bean id="securityManagementMapper" parent="AbstractMapperSupport">
    	<beans:property name="mapperInterface" value="com.hrbwmxx.framework.security.dao.SecurityManagementMapper"/>
    </beans:bean>
	
    <beans:bean id="securityContextProvider" class="com.hrbwmxx.framework.security.providers.SecurityContextProviderImpl">
		<beans:property name="securityManagementMapper" ref="securityManagementMapper" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
	</beans:bean>

    
    <beans:bean id="accessDecisionManager"
    	class="org.springframework.security.access.vote.AffirmativeBased">
    	<beans:constructor-arg name="decisionVoters">
    		<beans:list>
    			<beans:bean class="com.hrbwmxx.framework.security.voter.SecuredVoter" />
    		</beans:list>
    	</beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
   	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <beans:property name="userPropertyToUse" value="getSalt"/>
    </beans:bean>
      	<beans:bean id="daoUserDetailsService" class="com.hrbwmxx.framework.security.user.DaoUserDetailsServiceImpl">
		<beans:constructor-arg index="0" ref="securityContextProvider"/>
	</beans:bean>
   	<beans:bean id="daoAuthenticationProvider"
			class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="hideUserNotFoundExceptions" value="false" />
		<beans:property name="passwordEncoder" ref="passwordEncoder"/>
        <beans:property name="saltSource" ref="saltSource"/>
		<beans:property name="userDetailsService" ref="daoUserDetailsService" />
	</beans:bean>
	<authentication-manager>
		<authentication-provider ref="daoAuthenticationProvider">
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="securedMetadataSource" class="org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource"/>  
	
	<beans:bean id="delegatingMetadataSource" class="org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource">  
	  <beans:constructor-arg name="methodSecurityMetadataSources">  
	    <beans:list>  
	      <beans:ref bean="securedMetadataSource"/>  
	    </beans:list>  
	  </beans:constructor-arg>  
	</beans:bean> 
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager"> 
        <beans:constructor-arg name="providers"> 
            <beans:list> 
                <beans:ref bean="daoAuthenticationProvider" /> 
            </beans:list> 
        </beans:constructor-arg> 
    </beans:bean> 
	<beans:bean id="methodSecurityInterceptor" class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor">
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="securityMetadataSource" ref="delegatingMetadataSource"/>  
    </beans:bean>

    
   
  	
</beans:beans>